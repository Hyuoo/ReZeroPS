"""
Solving Date    : 2023.11.27
Solving Time    : 30m
Title           : 개구리 매칭
tags            : 수학, 그리디 알고리즘
url             : https://www.acmicpc.net/problem/30012
runtime         : 44 ms
memory          : 32140 KB
"""

s, n = map(int, input().split())
e = [*map(int, input().split())]
k, l = map(int, input().split())

min_i = 0
min_v = 10000*100001
for i in range(n):
    d = abs(e[i]-s)
    t = (k*2-d) if k*2 >= d else ((d-k*2)*l)
    if min_v > t:
        min_v = t
        min_i = i+1

print(min_v, min_i)

"""
제 1회 선린 프로그래밍 챌린지 Open Contest

문제읽는데 한참 걸린 문제

모든 개구리와 비용을 비교해서 최소인 개구리의 (값, 인덱스) 찾는 문제.

양쪽의 개구리가 같은 행동을 하기 때문에
- (점프거리*2)보다 거리가 짧으면 점프 패널티만큼의 비용을 낸다.
    - (점프거리-뛴거리) = (덜뛴거리) 만큼 패널티 비용이 들기 때문에
      양쪽의 점프거리를 합쳐서 거리랑 계산해도 된다
      (홀, 짝 상관없이 계산 가능)
    - 걸어가는 비용(L)이 최소가 1이고, (덜뛴패널티)는 칸 당 1이기 때문에
      무조건 패널티로 계산을 먼저 하는게 이득.
- (점프거리*2)보다 거리가 길면
    - 무조건 점프를 깎고 시작하는게 이득이므로 (비용 0)
      (거리-점프거리*2)를 한 (남은거리*L)의 비용
    - 남은거리는 어느쪽에서 이동해도 똑같이 L씩 늘어나므로 합쳐서 계산
- (점프거리*2)가 거리와 같은 경우 어느쪽으로 해도 성립.
    - (multiple 0)


처음에 무조건 점프를 뛰어야한다는 조건을 생각 안하고
min(위에서 계산 한 비용, 모두 걸어갈경우)
했다가 한참 못 풀었다. 
"""